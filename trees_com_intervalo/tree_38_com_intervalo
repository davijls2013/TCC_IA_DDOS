digraph Tree {
node [shape=box, style="filled, rounded", color="black", fontname="helvetica"] ;
edge [fontname="helvetica"] ;
0 [label=<min_seg_size_forward &le; 17.0<br/>Índice Gini = 0.024<br/>Amostras = 10177<br/>Valor = [197, 15910]<br/>Classe = DrDoS_UDP>, fillcolor="#3b9ee5"] ;
1 [label=<Fwd IAT Mean &le; 1.1<br/>Índice Gini = 0.0<br/>Amostras = 6043<br/>Valor = [2, 9548]<br/>Classe = DrDoS_UDP>, fillcolor="#399de5"] ;
0 -> 1 [labeldistance=2.5, labelangle=45, headlabel="True"] ;
2 [label=<Destination Port &le; 276.0<br/>Índice Gini = 0.002<br/>Amostras = 1254<br/>Valor = [2, 1960]<br/>Classe = DrDoS_UDP>, fillcolor="#399de5"] ;
1 -> 2 ;
3 [label=<Índice Gini = 0.0<br/>Amostras = 1<br/>Valor = [2, 0]<br/>Classe = BENIGN>, fillcolor="#e58139"] ;
2 -> 3 ;
4 [label=<Índice Gini = 0.0<br/>Amostras = 1253<br/>Valor = [0, 1960]<br/>Classe = DrDoS_UDP>, fillcolor="#399de5"] ;
2 -> 4 ;
5 [label=<Índice Gini = 0.0<br/>Amostras = 4789<br/>Valor = [0, 7588]<br/>Classe = DrDoS_UDP>, fillcolor="#399de5"] ;
1 -> 5 ;
6 [label=<Protocol &le; 11.5<br/>Índice Gini = 0.058<br/>Amostras = 4134<br/>Valor = [195, 6362]<br/>Classe = DrDoS_UDP>, fillcolor="#3fa0e6"] ;
0 -> 6 [labeldistance=2.5, labelangle=-45, headlabel="False"] ;
7 [label=<Destination Port &le; 261.5<br/>Índice Gini = 0.33<br/>Amostras = 76<br/>Valor = [95, 25]<br/>Classe = BENIGN>, fillcolor="#eca26d"] ;
6 -> 7 ;
8 [label=<Destination Port &le; 51.0<br/>Índice Gini = 0.5<br/>Amostras = 26<br/>Valor = [18, 18]<br/>Classe = BENIGN>, fillcolor="#ffffff"] ;
7 -> 8 ;
9 [label=<Fwd Packet Length Mean &le; 33.952<br/>Índice Gini = 0.32<br/>Amostras = 3<br/>Valor = [1, 4]<br/>Classe = DrDoS_UDP>, fillcolor="#6ab6ec"] ;
8 -> 9 ;
10 [label=<Índice Gini = 0.0<br/>Amostras = 1<br/>Valor = [1, 0]<br/>Classe = BENIGN>, fillcolor="#e58139"] ;
9 -> 10 ;
11 [label=<Índice Gini = 0.0<br/>Amostras = 2<br/>Valor = [0, 4]<br/>Classe = DrDoS_UDP>, fillcolor="#399de5"] ;
9 -> 11 ;
12 [label=<Fwd Packet Length Mean &le; 24.917<br/>Índice Gini = 0.495<br/>Amostras = 23<br/>Valor = [17, 14]<br/>Classe = BENIGN>, fillcolor="#fae9dc"] ;
8 -> 12 ;
13 [label=<Índice Gini = 0.401<br/>Amostras = 14<br/>Valor = [5, 13]<br/>Classe = DrDoS_UDP>, fillcolor="#85c3ef"] ;
12 -> 13 ;
14 [label=<Índice Gini = 0.142<br/>Amostras = 9<br/>Valor = [12, 1]<br/>Classe = BENIGN>, fillcolor="#e78c49"] ;
12 -> 14 ;
15 [label=<Destination Port &le; 1932.5<br/>Índice Gini = 0.153<br/>Amostras = 50<br/>Valor = [77, 7]<br/>Classe = BENIGN>, fillcolor="#e78c4b"] ;
7 -> 15 ;
16 [label=<Índice Gini = 0.0<br/>Amostras = 33<br/>Valor = [57, 0]<br/>Classe = BENIGN>, fillcolor="#e58139"] ;
15 -> 16 ;
17 [label=<min_seg_size_forward &le; 26.0<br/>Índice Gini = 0.384<br/>Amostras = 17<br/>Valor = [20, 7]<br/>Classe = BENIGN>, fillcolor="#eead7e"] ;
15 -> 17 ;
18 [label=<Índice Gini = 0.165<br/>Amostras = 13<br/>Valor = [20, 2]<br/>Classe = BENIGN>, fillcolor="#e88e4d"] ;
17 -> 18 ;
19 [label=<Índice Gini = 0.0<br/>Amostras = 4<br/>Valor = [0, 5]<br/>Classe = DrDoS_UDP>, fillcolor="#399de5"] ;
17 -> 19 ;
20 [label=<Fwd Packet Length Mean &le; 48.5<br/>Índice Gini = 0.031<br/>Amostras = 4058<br/>Valor = [100, 6337]<br/>Classe = DrDoS_UDP>, fillcolor="#3c9fe5"] ;
6 -> 20 ;
21 [label=<Índice Gini = 0.0<br/>Amostras = 54<br/>Valor = [96, 0]<br/>Classe = BENIGN>, fillcolor="#e58139"] ;
20 -> 21 ;
22 [label=<Destination Port &le; 95.0<br/>Índice Gini = 0.001<br/>Amostras = 4004<br/>Valor = [4, 6337]<br/>Classe = DrDoS_UDP>, fillcolor="#399de5"] ;
20 -> 22 ;
23 [label=<Fwd Packet Length Mean &le; 222.5<br/>Índice Gini = 0.48<br/>Amostras = 7<br/>Valor = [4, 6]<br/>Classe = DrDoS_UDP>, fillcolor="#bddef6"] ;
22 -> 23 ;
24 [label=<Índice Gini = 0.0<br/>Amostras = 3<br/>Valor = [4, 0]<br/>Classe = BENIGN>, fillcolor="#e58139"] ;
23 -> 24 ;
25 [label=<Índice Gini = 0.0<br/>Amostras = 4<br/>Valor = [0, 6]<br/>Classe = DrDoS_UDP>, fillcolor="#399de5"] ;
23 -> 25 ;
26 [label=<Índice Gini = 0.0<br/>Amostras = 3997<br/>Valor = [0, 6331]<br/>Classe = DrDoS_UDP>, fillcolor="#399de5"] ;
22 -> 26 ;
}
